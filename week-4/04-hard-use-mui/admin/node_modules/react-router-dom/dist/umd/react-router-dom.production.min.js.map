{"version":3,"file":"react-router-dom.production.min.js","sources":["../../dom.ts","../../index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","_formDataSupportsSubmitter","supportedFormEncTypes","Set","getFormEncType","encType","has","getFormSubmissionInfo","target","basename","method","action","formData","body","toLowerCase","attr","getAttribute","stripBasename","FormData","isButtonElement","isInputElement","type","form","Error","document","createElement","e","isFormDataSubmitterSupported","name","prefix","append","undefined","parseHydrationData","_window","state","window","__staticRouterHydrationData","errors","_extends","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","error","message","stack","startTransitionImpl","React","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","_ref4","ref","absoluteHref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","_objectWithoutPropertiesLoose","_excluded","useContext","NavigationContext","isExternal","test","currentUrl","URL","location","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","children","_excluded2","useResolvedPath","useLocation","routerState","DataRouterStateContext","UNSAFE_DataRouterStateContext","navigator","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","filter","Boolean","join","Form","props","submit","useSubmit","FormImpl","_ref6","forwardedRef","onSubmit","_excluded3","formMethod","formAction","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","DataRouterContext","UNSAFE_DataRouterContext","invariant","UNSAFE_invariant","useDataRouterState","_temp","replaceProp","navigate","useNavigate","useCallback","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","createPath","validateClientSideSubmission","router","UseSubmit","currentRouteId","useRouteId","options","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","_temp2","routeContext","RouteContext","UNSAFE_RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","fetcherId","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","useScrollRestoration","_temp3","getKey","storageKey","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","useEffect","history","scrollRestoration","callback","capture","opts","addEventListener","removeEventListener","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","useLayoutEffect","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","_ref","future","historyRef","useRef","current","createBrowserHistory","v5Compat","setStateImpl","useState","v7_startTransition","setState","newState","listen","Router","navigationType","_ref2","createHashHistory","_ref7","routes","createRouter","v7_prependBasename","hydrationData","mapRouteProperties","initialize","_ref3","_ref8","when","blocker","useBlocker","reset","confirm","setTimeout","proceed","_route$matches","UseFetcher","routeId","id","String","createFetcherForm","load","fetcher","getFetcher","fetcherWithComponents","useMemo","deleteFetcher","console","warn","UseFetchers","fetchers","values","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","searchParams","locationSearch","defaultSearchParams","getAll","forEach","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams"],"mappings":"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"}